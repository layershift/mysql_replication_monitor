version: 7.3.2
build: 20221125
type: update
name: 'Mysql Replication Monitoring'
id: 'Replication_monitoring'
baseUrl: https://raw.githubusercontent.com/layershift/mysql_replication_monitor/main
logo: /images/mysql-sync.png?_r=${fn.random}

targetNodes: 
  nodeType:
    - mariadb
    - mariadb-dockerized
    - mariadb10
    - mysql
    - mysql5
    - mysql8

categories:
 - apps/others

description:
  short: MySQL/MariaDB replication monitoring and alert
  text: |
    This add-on is intended to be installed on the slave nodes in MySQL/MariaDB database replication setups.
    It will monitor and alert in case of replication issues.

globals:
  message: ""
  newline: "\n"


settings:
  fields:
    - type: string
      caption: Database User
      name: user
      required: true
      default: root
    - type: string
      caption: Database User Password
      name: passwd
      required: true
    - type: string
      caption: Alert recipient
      name: alertRecipient
      required: true
      default:
      tooltip: Multiple email addresses can be specified separated by ,
    - type: string
      name: appPass
      inputType: hidden
      value:
      required: true

onBeforeInit: |
  return {
    "result": 0,
    "settings": {
      "fields": [{
        "type": "string",
        "name": "user",
        "caption": "Database User",
        "hideLabel": false,
        "required": true,
        "default": "root"
      }, {
        "type": "string",
        "name": "passwd",
        "caption": "Database User Password",
        "hideLabel": false,
        "required": true,
        "default": ""
      }, {
        "type": "string",
        "name": "alertRecipient",
        "caption": "Alert recipient",
        "hideLabel": false,
        "required": true,
        "default": "${user.email}",
        "tooltip": "Multiple email addresses can be specified separated by ,"
      }, {
        "type": "string",
        "name": "appPass",
        "caption": "Database Script Password",
        "value": com.hivext.api.utils.Random.getPswd(10),
        "inputType": "hidden"
      }]
    }
  };


menu:
  - caption: Update
    action: install_script
    confirmText: Are you sure you wish to update the monitoring script?
    loadingText: Updating...

buttons:
  - caption: Check Replication status
    action: checkReplicationStatus
    confirmText: Are you sure you wish to check the replication status?
    loadingText: Checking...

onInstall:
  - install_script
  - configure_script
  - create_cron

onUninstall:
  - remove_script
  - remove_cron
    
actions:
    install_script :
      #This creates a copy of the monitoring script, and adds the "check_monit" mysql user
      cmd[${targetNodes.nodeGroup}]:      
        - /bin/mkdir -p /opt/ls_tools
        - /bin/curl -fsSL '${baseUrl}/scripts/replication_monitor.sh' -o /opt/ls_tools/replication_monitor.sh;
        - chmod +x /opt/ls_tools/replication_monitor.sh;
      user: root
    
    configure_script:
      cmd[${targetNodes.nodeGroup}]:
        - /opt/ls_tools/replication_monitor.sh --create '${settings.user}' '${settings.passwd}' '${settings.alertRecipient}' '${settings.appPass}'
      user: root
  
    create_cron :
      cmd[${targetNodes.nodeGroup}]:
        - /bin/touch /etc/cron.d/replication_check
        - /bin/echo "*/5 * * * * root /opt/ls_tools/replication_monitor.sh --check" > /etc/cron.d/replication_check
      user: root
        
    remove_script :
      cmd[${targetNodes.nodeGroup}]:
        - /opt/ls_tools/replication_monitor.sh --uninstall '${settings.user}' '${settings.passwd}'
        - /usr/bin/rm -f /opt/ls_tools/replication_monitor.sh
      user: root        
        
    remove_cron :
      cmd[${targetNodes.nodeGroup}]:
        - /usr/bin/rm -f /etc/cron.d/replication_check
      user: root

    checkReplicationStatus:
      - setGlobals:
        - message: ""
      - forEach(node:targetNodes):
        - cmd [${@node.id}]:
            - /opt/ls_tools/replication_monitor.sh --status --short
          user: root
        - setGlobals:
            message: ${globals.message}${globals.newline}${response.out}
        
      - log:
        - ${globals.message}
      - message: ${globals.message}
        script: |
          return {result: 'info', message: message.replace(/\n/g, '  \n')}
        
